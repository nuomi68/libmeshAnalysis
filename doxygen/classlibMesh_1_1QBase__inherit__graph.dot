digraph "libMesh::QBase"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="libMesh::QBase",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="libMesh::ReferenceCounted\lObject\< QBase \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1ReferenceCountedObject.html"];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="libMesh::ReferenceCounter",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1ReferenceCounter.html",tooltip="This is the base class for enabling reference counting. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="libMesh::QClough",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1QClough.html",tooltip="This class creates a Gaussian quadrature rule duplicated for each subelement of a Clough-Tocher divid..."];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="libMesh::QConical",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1QConical.html",tooltip="This class implements the so-called conical product quadrature rules for Tri and Tet elements..."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="libMesh::QGauss",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1QGauss.html",tooltip="This class implements specific orders of Gauss quadrature. "];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="libMesh::QGaussLobatto",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1QGaussLobatto.html",tooltip="This class implements Gauss-Lobatto quadrature for 1D elements and 2D/3D tensor product elements..."];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="libMesh::QGrid",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1QGrid.html",tooltip="This class creates quadrature points on a uniform grid, with order+1 points on an edge..."];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="libMesh::QGrundmann\l_Moller",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1QGrundmann__Moller.html",tooltip="This class implements the Grundmann-Moller quadrature rules for tetrahedra. "];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="libMesh::QJacobi",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1QJacobi.html",tooltip="This class implements two (for now) Jacobi-Gauss quadrature rules. "];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="libMesh::QMonomial",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1QMonomial.html",tooltip="This class defines alternate quadrature rules on &quot;tensor-product&quot; elements (quadrilaterals and hexahe..."];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="libMesh::QNodal",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1QNodal.html",tooltip="This class implements nodal quadrature rules for various element types. "];
  Node1 -> Node13 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node13 [label="libMesh::QSimpson",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1QSimpson.html",tooltip="This class implements Simpson quadrature. "];
  Node1 -> Node14 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node14 [label="libMesh::QTrap",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1QTrap.html",tooltip="This class implements trapezoidal quadrature. "];
}
