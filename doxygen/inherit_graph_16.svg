<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 7.0.5 (20221231.0122)
 -->
<!-- Title: 类继承关系图 Pages: 1 -->
<svg width="794pt" height="598pt"
 viewBox="0.00 0.00 794.00 598.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 594)">
<title>类继承关系图</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-594 790,-594 790,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<polygon fill="white" stroke="#bfbfbf" points="206.5,-228.5 206.5,-247.5 302.5,-247.5 302.5,-228.5 206.5,-228.5"/>
<text text-anchor="middle" x="254.5" y="-235.5" font-family="Helvetica,sans-Serif" font-size="10.00">Epetra_Operator</text>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:href="classlibMesh_1_1TrilinosPreconditioner.html" target="_top" xlink:title="这个类提供了一个接口，用于使用Trilinos提供的预条件器套件。 所有重写的虚拟函数在preconditioner.h中有文档说明。 ">
<polygon fill="white" stroke="black" points="371,-190.5 371,-209.5 565,-209.5 565,-190.5 371,-190.5"/>
<text text-anchor="middle" x="468" y="-197.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::TrilinosPreconditioner&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node1&#45;&gt;Node2 -->
<g id="edge1" class="edge">
<title>Node1&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M313.68,-227.55C345.13,-221.9 383.67,-214.97 414.24,-209.48"/>
<polygon fill="midnightblue" stroke="midnightblue" points="313.15,-224.09 303.93,-229.3 314.39,-230.98 313.15,-224.09"/>
</g>
<!-- Node3 -->
<g id="node3" class="node">
<title>Node3</title>
<polygon fill="white" stroke="#bfbfbf" points="27,-323.5 27,-342.5 111,-342.5 111,-323.5 27,-323.5"/>
<text text-anchor="middle" x="69" y="-330.5" font-family="Helvetica,sans-Serif" font-size="10.00">ParallelObject</text>
</g>
<!-- Node4 -->
<g id="node4" class="node">
<title>Node4</title>
<g id="a_node4"><a xlink:href="classlibMesh_1_1NumericVector.html" target="_top" xlink:title="提供了不同线性代数库的向量存储方案的统一接口。 ">
<polygon fill="white" stroke="black" points="188,-457 188,-487 321,-487 321,-457 188,-457"/>
<text text-anchor="start" x="196" y="-475" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::NumericVector</text>
<text text-anchor="middle" x="254.5" y="-464" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; typename &gt;</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node4 -->
<g id="edge2" class="edge">
<title>Node3&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M82.25,-351.69C99.71,-376.89 134.08,-421.53 174,-447 180.1,-450.89 186.85,-454.22 193.76,-457.05"/>
<polygon fill="midnightblue" stroke="midnightblue" points="85.18,-349.77 76.69,-343.45 79.38,-353.69 85.18,-349.77"/>
</g>
<!-- Node5 -->
<g id="node5" class="node">
<title>Node5</title>
<g id="a_node5"><a xlink:href="classlibMesh_1_1Preconditioner.html" target="_top" xlink:title="该类提供了一个统一的接口，用于预处理器。此基类可继承，以包装来自不同软件包（如 PETSc 或 Trilinos）的预处理器。 ">
<polygon fill="white" stroke="black" points="174.5,-190.5 174.5,-209.5 334.5,-209.5 334.5,-190.5 174.5,-190.5"/>
<text text-anchor="middle" x="254.5" y="-197.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::Preconditioner&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node5 -->
<g id="edge3" class="edge">
<title>Node3&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M121.36,-324.4C127.44,-321.79 133.19,-318.4 138,-314 171.33,-283.54 140.1,-248.83 174,-219 178.47,-215.06 183.62,-211.91 189.1,-209.38"/>
<polygon fill="midnightblue" stroke="midnightblue" points="120.59,-320.96 112.33,-327.6 122.92,-327.56 120.59,-320.96"/>
</g>
<!-- Node7 -->
<g id="node7" class="node">
<title>Node7</title>
<g id="a_node7"><a xlink:href="classlibMesh_1_1ShellMatrix.html" target="_top" xlink:title="通用的Shell矩阵，即一个仅定义其对向量的作用的矩阵。此类包含必须在派生类中重写的纯虚拟成员。 ">
<polygon fill="white" stroke="black" points="182,-95.5 182,-114.5 327,-114.5 327,-95.5 182,-95.5"/>
<text text-anchor="middle" x="254.5" y="-102.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::ShellMatrix&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node7 -->
<g id="edge6" class="edge">
<title>Node3&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M121.34,-325.03C127.52,-322.32 133.3,-318.74 138,-314 181.13,-270.52 142.72,-233.65 174,-181 191.07,-152.27 221.95,-127.31 239.79,-114.38"/>
<polygon fill="midnightblue" stroke="midnightblue" points="120.36,-321.66 112.09,-328.29 122.69,-328.26 120.36,-321.66"/>
</g>
<!-- Node12 -->
<g id="node12" class="node">
<title>Node12</title>
<g id="a_node12"><a xlink:href="classlibMesh_1_1SparseMatrix.html" target="_top" xlink:title="这是一个通用的稀疏矩阵类。该类包含了必须在派生类中覆盖的纯虚拟成员。 使用一个公共的基类允许从不同的求解器包中以不同的格式统一访问稀疏矩阵。 ">
<polygon fill="white" stroke="black" points="177.5,-418.5 177.5,-437.5 331.5,-437.5 331.5,-418.5 177.5,-418.5"/>
<text text-anchor="middle" x="254.5" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::SparseMatrix&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node12 -->
<g id="edge11" class="edge">
<title>Node3&#45;&gt;Node12</title>
<path fill="none" stroke="midnightblue" d="M98.2,-347.6C136.32,-367.34 203.21,-401.96 235.31,-418.58"/>
<polygon fill="midnightblue" stroke="midnightblue" points="100.1,-344.64 89.61,-343.15 96.88,-350.86 100.1,-344.64"/>
</g>
<!-- Node19 -->
<g id="node19" class="node">
<title>Node19</title>
<g id="a_node19"><a xlink:href="classlibMesh_1_1NumericVector.html" target="_top" xlink:title="libMesh::NumericVector\&lt; T \&gt;">
<polygon fill="white" stroke="black" points="174,-304.5 174,-323.5 335,-323.5 335,-304.5 174,-304.5"/>
<text text-anchor="middle" x="254.5" y="-311.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::NumericVector&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node3&#45;&gt;Node19 -->
<g id="edge18" class="edge">
<title>Node3&#45;&gt;Node19</title>
<path fill="none" stroke="midnightblue" d="M122.11,-327.6C138.3,-325.93 156.52,-324.04 174.12,-322.22"/>
<polygon fill="midnightblue" stroke="midnightblue" points="121.82,-324.12 112.23,-328.63 122.54,-331.08 121.82,-324.12"/>
</g>
<!-- Node5&#45;&gt;Node2 -->
<g id="edge5" class="edge">
<title>Node5&#45;&gt;Node2</title>
<path fill="none" stroke="midnightblue" d="M345.61,-200C354.01,-200 362.55,-200 371.01,-200"/>
<polygon fill="midnightblue" stroke="midnightblue" points="345.77,-196.5 335.77,-200 345.77,-203.5 345.77,-196.5"/>
</g>
<!-- Node6 -->
<g id="node6" class="node">
<title>Node6</title>
<g id="a_node6"><a xlink:href="classlibMesh_1_1EigenPreconditioner.html" target="_top" xlink:title="EigenPreconditioner 类提供了对 Eigen 库中预处理器集合的接口。 ">
<polygon fill="white" stroke="black" points="374.5,-152.5 374.5,-171.5 561.5,-171.5 561.5,-152.5 374.5,-152.5"/>
<text text-anchor="middle" x="468" y="-159.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::EigenPreconditioner&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node5&#45;&gt;Node6 -->
<g id="edge4" class="edge">
<title>Node5&#45;&gt;Node6</title>
<path fill="none" stroke="midnightblue" d="M319.26,-188.54C349.69,-183.08 385.66,-176.62 414.48,-171.44"/>
<polygon fill="midnightblue" stroke="midnightblue" points="319.04,-185.03 309.81,-190.24 320.28,-191.92 319.04,-185.03"/>
</g>
<!-- Node8 -->
<g id="node8" class="node">
<title>Node8</title>
<g id="a_node8"><a xlink:href="classlibMesh_1_1PetscShellMatrix.html" target="_top" xlink:title="这个类允许使用 PETSc shell 矩阵。 所有覆盖的虚拟函数都在 shell_matrix.h 中有文档说明。 ">
<polygon fill="white" stroke="black" points="382.5,-38.5 382.5,-57.5 553.5,-57.5 553.5,-38.5 382.5,-38.5"/>
<text text-anchor="middle" x="468" y="-45.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::PetscShellMatrix&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node8 -->
<g id="edge7" class="edge">
<title>Node7&#45;&gt;Node8</title>
<path fill="none" stroke="midnightblue" d="M291.71,-91.82C314.3,-83.92 344.1,-74.06 371,-67 384.48,-63.46 399.17,-60.24 412.92,-57.5"/>
<polygon fill="midnightblue" stroke="midnightblue" points="290.61,-88.5 282.35,-95.13 292.94,-95.1 290.61,-88.5"/>
</g>
<!-- Node9 -->
<g id="node9" class="node">
<title>Node9</title>
<g id="a_node9"><a xlink:href="classlibMesh_1_1SparseShellMatrix.html" target="_top" xlink:title="允许将任何SparseMatrix对象用作壳矩阵的类。 ">
<polygon fill="white" stroke="black" points="379,-0.5 379,-19.5 557,-19.5 557,-0.5 379,-0.5"/>
<text text-anchor="middle" x="468" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::SparseShellMatrix&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node9 -->
<g id="edge8" class="edge">
<title>Node7&#45;&gt;Node9</title>
<path fill="none" stroke="midnightblue" d="M275.16,-88.59C297.13,-71.12 334.43,-43.98 371,-29 380.59,-25.07 391.06,-21.94 401.45,-19.44"/>
<polygon fill="midnightblue" stroke="midnightblue" points="273.2,-85.67 267.64,-94.69 277.61,-91.11 273.2,-85.67"/>
</g>
<!-- Node10 -->
<g id="node10" class="node">
<title>Node10</title>
<g id="a_node10"><a xlink:href="classlibMesh_1_1SumShellMatrix.html" target="_top" xlink:title="将任意数量的壳矩阵组合成一个单独的壳矩阵，通过将它们相加在一起的类。 ">
<polygon fill="white" stroke="black" points="384.5,-114.5 384.5,-133.5 551.5,-133.5 551.5,-114.5 384.5,-114.5"/>
<text text-anchor="middle" x="468" y="-121.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::SumShellMatrix&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node10 -->
<g id="edge9" class="edge">
<title>Node7&#45;&gt;Node10</title>
<path fill="none" stroke="midnightblue" d="M337.86,-112.4C353.24,-113.78 369.31,-115.22 384.69,-116.61"/>
<polygon fill="midnightblue" stroke="midnightblue" points="338.59,-108.95 328.32,-111.54 337.96,-115.92 338.59,-108.95"/>
</g>
<!-- Node11 -->
<g id="node11" class="node">
<title>Node11</title>
<g id="a_node11"><a xlink:href="classlibMesh_1_1TensorShellMatrix.html" target="_top" xlink:title="由两个向量的张量积构成的壳矩阵，即A = v*w^T。 ">
<polygon fill="white" stroke="black" points="380,-76.5 380,-95.5 556,-95.5 556,-76.5 380,-76.5"/>
<text text-anchor="middle" x="468" y="-83.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::TensorShellMatrix&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node7&#45;&gt;Node11 -->
<g id="edge10" class="edge">
<title>Node7&#45;&gt;Node11</title>
<path fill="none" stroke="midnightblue" d="M338.24,-97.57C352.02,-96.33 366.35,-95.04 380.23,-93.79"/>
<polygon fill="midnightblue" stroke="midnightblue" points="337.96,-94.08 328.32,-98.46 338.59,-101.05 337.96,-94.08"/>
</g>
<!-- Node13 -->
<g id="node13" class="node">
<title>Node13</title>
<g id="a_node13"><a xlink:href="classlibMesh_1_1DiagonalMatrix.html" target="_top" xlink:title="对角矩阵类，其底层存储是一个向量 ">
<polygon fill="white" stroke="black" points="386,-456.5 386,-475.5 550,-475.5 550,-456.5 386,-456.5"/>
<text text-anchor="middle" x="468" y="-463.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::DiagonalMatrix&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node12&#45;&gt;Node13 -->
<g id="edge12" class="edge">
<title>Node12&#45;&gt;Node13</title>
<path fill="none" stroke="midnightblue" d="M319.26,-439.46C349.69,-444.92 385.66,-451.38 414.48,-456.56"/>
<polygon fill="midnightblue" stroke="midnightblue" points="320.28,-436.08 309.81,-437.76 319.04,-442.97 320.28,-436.08"/>
</g>
<!-- Node15 -->
<g id="node15" class="node">
<title>Node15</title>
<g id="a_node15"><a xlink:href="classlibMesh_1_1EigenSparseMatrix.html" target="_top" xlink:title="EigenSparseMatrix 类包装了来自 Eigen 库的稀疏矩阵对象。 ">
<polygon fill="white" stroke="black" points="377.5,-418.5 377.5,-437.5 558.5,-437.5 558.5,-418.5 377.5,-418.5"/>
<text text-anchor="middle" x="468" y="-425.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::EigenSparseMatrix&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node12&#45;&gt;Node15 -->
<g id="edge14" class="edge">
<title>Node12&#45;&gt;Node15</title>
<path fill="none" stroke="midnightblue" d="M342.69,-428C354.25,-428 366.11,-428 377.71,-428"/>
<polygon fill="midnightblue" stroke="midnightblue" points="342.77,-424.5 332.77,-428 342.77,-431.5 342.77,-424.5"/>
</g>
<!-- Node16 -->
<g id="node16" class="node">
<title>Node16</title>
<g id="a_node16"><a xlink:href="classlibMesh_1_1EpetraMatrix.html" target="_top" xlink:title="此类提供了对Epetra数据结构的并行、稀疏矩阵的友好接口。所有重写的虚拟函数在sparse_matrix.h中都有文档。 ">
<polygon fill="white" stroke="black" points="392,-570.5 392,-589.5 544,-589.5 544,-570.5 392,-570.5"/>
<text text-anchor="middle" x="468" y="-577.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::EpetraMatrix&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node12&#45;&gt;Node16 -->
<g id="edge15" class="edge">
<title>Node12&#45;&gt;Node16</title>
<path fill="none" stroke="midnightblue" d="M328.94,-443.1C331.07,-444.59 333.1,-446.22 335,-448 373.41,-484.1 331.68,-525.89 371,-561 377.21,-566.54 384.56,-570.66 392.39,-573.7"/>
<polygon fill="midnightblue" stroke="midnightblue" points="330.72,-440.09 320.3,-438.17 327.25,-446.17 330.72,-440.09"/>
</g>
<!-- Node17 -->
<g id="node17" class="node">
<title>Node17</title>
<g id="a_node17"><a xlink:href="classlibMesh_1_1LaspackMatrix.html" target="_top" xlink:title="LaspackMatrix类封装了Laspack库中的QMatrix对象。 目前，Laspack仅支持实数数据类型，因此这个类是对 SparseMatrix&lt;T&gt; 的全特化，其中 T = Real。 所...">
<polygon fill="white" stroke="black" points="387.5,-532.5 387.5,-551.5 548.5,-551.5 548.5,-532.5 387.5,-532.5"/>
<text text-anchor="middle" x="468" y="-539.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::LaspackMatrix&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node12&#45;&gt;Node17 -->
<g id="edge16" class="edge">
<title>Node12&#45;&gt;Node17</title>
<path fill="none" stroke="midnightblue" d="M326.9,-442.41C329.75,-444.07 332.47,-445.93 335,-448 363.64,-471.39 341.78,-500.35 371,-523 376.1,-526.95 381.81,-530.15 387.82,-532.74"/>
<polygon fill="midnightblue" stroke="midnightblue" points="328.66,-439.37 318.14,-438.1 325.57,-445.65 328.66,-439.37"/>
</g>
<!-- Node18 -->
<g id="node18" class="node">
<title>Node18</title>
<g id="a_node18"><a xlink:href="classlibMesh_1_1PetscMatrix.html" target="_top" xlink:title="这个类提供了一个方便的接口，用于操作并行稀疏矩阵的 PETSc C 库数据结构。 所有覆盖的虚拟函数都在 sparse_matrix.h 中有详细的文档说明。 ">
<polygon fill="white" stroke="black" points="394.5,-494.5 394.5,-513.5 541.5,-513.5 541.5,-494.5 394.5,-494.5"/>
<text text-anchor="middle" x="468" y="-501.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::PetscMatrix&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node12&#45;&gt;Node18 -->
<g id="edge17" class="edge">
<title>Node12&#45;&gt;Node18</title>
<path fill="none" stroke="midnightblue" d="M320.95,-441.28C325.84,-443.23 330.58,-445.45 335,-448 354.88,-459.46 350.83,-474.06 371,-485 378.32,-488.97 386.35,-492.12 394.56,-494.61"/>
<polygon fill="midnightblue" stroke="midnightblue" points="322.12,-437.98 311.53,-437.96 319.79,-444.58 322.12,-437.98"/>
</g>
<!-- Node14 -->
<g id="node14" class="node">
<title>Node14</title>
<g id="a_node14"><a xlink:href="classlibMesh_1_1LumpedMassMatrix.html" target="_top" xlink:title="模板类用于构造集中质量矩阵。 可能还有用于计算与整体系统缩放相关的数量。每当在此类上调用 add 方法时，我们都会将提供的值的绝对值相加到行索引 i 中。 ">
<polygon fill="white" stroke="black" points="601,-456.5 601,-475.5 786,-475.5 786,-456.5 601,-456.5"/>
<text text-anchor="middle" x="693.5" y="-463.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::LumpedMassMatrix&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node13&#45;&gt;Node14 -->
<g id="edge13" class="edge">
<title>Node13&#45;&gt;Node14</title>
<path fill="none" stroke="midnightblue" d="M560.81,-466C574.18,-466 587.95,-466 601.31,-466"/>
<polygon fill="midnightblue" stroke="midnightblue" points="561.2,-462.5 551.2,-466 561.2,-469.5 561.2,-462.5"/>
</g>
<!-- Node20 -->
<g id="node20" class="node">
<title>Node20</title>
<g id="a_node20"><a xlink:href="classlibMesh_1_1DistributedVector.html" target="_top" xlink:title="该类提供了一个简单的并行分布式向量数据类型， 专门用于 libmesh。提供了一些集体通信功能。 ">
<polygon fill="white" stroke="black" points="381,-342.5 381,-361.5 555,-361.5 555,-342.5 381,-342.5"/>
<text text-anchor="middle" x="468" y="-349.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::DistributedVector&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node19&#45;&gt;Node20 -->
<g id="edge19" class="edge">
<title>Node19&#45;&gt;Node20</title>
<path fill="none" stroke="midnightblue" d="M319.26,-325.46C349.69,-330.92 385.66,-337.38 414.48,-342.56"/>
<polygon fill="midnightblue" stroke="midnightblue" points="320.28,-322.08 309.81,-323.76 319.04,-328.97 320.28,-322.08"/>
</g>
<!-- Node21 -->
<g id="node21" class="node">
<title>Node21</title>
<g id="a_node21"><a xlink:href="classlibMesh_1_1EigenSparseVector.html" target="_top" xlink:title="This class provides a nice interface to the Eigen C++&#45;based data structures for serial vectors...">
<polygon fill="white" stroke="black" points="378,-304.5 378,-323.5 558,-323.5 558,-304.5 378,-304.5"/>
<text text-anchor="middle" x="468" y="-311.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::EigenSparseVector&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node19&#45;&gt;Node21 -->
<g id="edge20" class="edge">
<title>Node19&#45;&gt;Node21</title>
<path fill="none" stroke="midnightblue" d="M346.28,-314C356.9,-314 367.73,-314 378.32,-314"/>
<polygon fill="midnightblue" stroke="midnightblue" points="346.37,-310.5 336.37,-314 346.37,-317.5 346.37,-310.5"/>
</g>
<!-- Node22 -->
<g id="node22" class="node">
<title>Node22</title>
<g id="a_node22"><a xlink:href="classlibMesh_1_1EpetraVector.html" target="_top" xlink:title="此类提供了对Trilinos Epetra_Vector对象的友好接口。所有重写的虚拟函数在numeric_vector.h中都有文档。 ">
<polygon fill="white" stroke="black" points="392,-266.5 392,-285.5 544,-285.5 544,-266.5 392,-266.5"/>
<text text-anchor="middle" x="468" y="-273.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::EpetraVector&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node19&#45;&gt;Node22 -->
<g id="edge21" class="edge">
<title>Node19&#45;&gt;Node22</title>
<path fill="none" stroke="midnightblue" d="M319.26,-302.54C349.69,-297.08 385.66,-290.62 414.48,-285.44"/>
<polygon fill="midnightblue" stroke="midnightblue" points="319.04,-299.03 309.81,-304.24 320.28,-305.92 319.04,-299.03"/>
</g>
<!-- Node23 -->
<g id="node23" class="node">
<title>Node23</title>
<g id="a_node23"><a xlink:href="classlibMesh_1_1LaspackVector.html" target="_top" xlink:title="这个类为基于laspackc的串行向量数据结构提供了一个很好的接口。 所有被覆盖的虚函数都记录在numeric_vector.h中。 ">
<polygon fill="white" stroke="black" points="388,-228.5 388,-247.5 548,-247.5 548,-228.5 388,-228.5"/>
<text text-anchor="middle" x="468" y="-235.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::LaspackVector&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node19&#45;&gt;Node23 -->
<g id="edge22" class="edge">
<title>Node19&#45;&gt;Node23</title>
<path fill="none" stroke="midnightblue" d="M280.9,-299.03C303.76,-286.15 338.64,-267.97 371,-257 382.26,-253.18 394.54,-250.03 406.44,-247.47"/>
<polygon fill="midnightblue" stroke="midnightblue" points="279.25,-295.94 272.31,-303.94 282.73,-302.01 279.25,-295.94"/>
</g>
<!-- Node24 -->
<g id="node24" class="node">
<title>Node24</title>
<g id="a_node24"><a xlink:href="classlibMesh_1_1PetscVector.html" target="_top" xlink:title="该类提供了一个良好的接口，用于访问 PETSc 的 Vec 对象。所有重写的虚拟函数都在 numeric_vector.h 中有文档说明。 ">
<polygon fill="white" stroke="black" points="395,-380.5 395,-399.5 541,-399.5 541,-380.5 395,-380.5"/>
<text text-anchor="middle" x="468" y="-387.5" font-family="Helvetica,sans-Serif" font-size="10.00">libMesh::PetscVector&lt; T &gt;</text>
</a>
</g>
</g>
<!-- Node19&#45;&gt;Node24 -->
<g id="edge23" class="edge">
<title>Node19&#45;&gt;Node24</title>
<path fill="none" stroke="midnightblue" d="M280.9,-328.97C303.76,-341.85 338.64,-360.03 371,-371 382.26,-374.82 394.54,-377.97 406.44,-380.53"/>
<polygon fill="midnightblue" stroke="midnightblue" points="282.73,-325.99 272.31,-324.06 279.25,-332.06 282.73,-325.99"/>
</g>
<!-- Node25 -->
<g id="node25" class="node">
<title>Node25</title>
<polygon fill="white" stroke="#bfbfbf" points="0,-285.5 0,-304.5 138,-304.5 138,-285.5 0,-285.5"/>
<text text-anchor="middle" x="69" y="-292.5" font-family="Helvetica,sans-Serif" font-size="10.00">ReferenceCountedObject</text>
</g>
<!-- Node25&#45;&gt;Node4 -->
<g id="edge24" class="edge">
<title>Node25&#45;&gt;Node4</title>
<path fill="none" stroke="midnightblue" d="M134.15,-310.56C135.5,-311.63 136.79,-312.78 138,-314 181.13,-357.48 131.58,-402.83 174,-447 178.11,-451.28 182.94,-454.83 188.16,-457.77"/>
<polygon fill="midnightblue" stroke="midnightblue" points="136.12,-307.66 125.8,-305.27 132.38,-313.57 136.12,-307.66"/>
</g>
<!-- Node25&#45;&gt;Node5 -->
<g id="edge25" class="edge">
<title>Node25&#45;&gt;Node5</title>
<path fill="none" stroke="midnightblue" d="M88.31,-278.07C108.03,-260.73 141.03,-234.24 174,-219 182.37,-215.13 191.62,-212 200.76,-209.49"/>
<polygon fill="midnightblue" stroke="midnightblue" points="85.98,-275.45 80.88,-284.74 90.66,-280.66 85.98,-275.45"/>
</g>
<!-- Node25&#45;&gt;Node7 -->
<g id="edge26" class="edge">
<title>Node25&#45;&gt;Node7</title>
<path fill="none" stroke="midnightblue" d="M85.71,-277.03C105.76,-254.27 141.73,-214.03 174,-181 198.15,-156.28 227.89,-128.52 243.25,-114.38"/>
<polygon fill="midnightblue" stroke="midnightblue" points="83.12,-274.68 79.15,-284.5 88.38,-279.3 83.12,-274.68"/>
</g>
<!-- Node25&#45;&gt;Node12 -->
<g id="edge27" class="edge">
<title>Node25&#45;&gt;Node12</title>
<path fill="none" stroke="midnightblue" d="M126.59,-308.37C130.55,-310.04 134.4,-311.91 138,-314 187.23,-342.56 230.68,-397.03 246.82,-418.73"/>
<polygon fill="midnightblue" stroke="midnightblue" points="127.93,-305.13 117.34,-304.92 125.49,-311.69 127.93,-305.13"/>
</g>
<!-- Node25&#45;&gt;Node19 -->
<g id="edge28" class="edge">
<title>Node25&#45;&gt;Node19</title>
<path fill="none" stroke="midnightblue" d="M149.05,-303.19C157.38,-304.05 165.85,-304.92 174.19,-305.79"/>
<polygon fill="midnightblue" stroke="midnightblue" points="149.62,-299.73 139.31,-302.18 148.9,-306.69 149.62,-299.73"/>
</g>
</g>
</svg>
