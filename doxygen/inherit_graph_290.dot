digraph "类继承关系图"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="allocator",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="libMesh::FastPoolAllocator\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1FastPoolAllocator.html",tooltip="An allocator which can be used in standard containers. "];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="libMesh::PoolAllocator\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1PoolAllocator.html",tooltip="An allocator which can be used in standard containers. "];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="libMesh::Threads::scalable\l_allocator\< T \>",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classlibMesh_1_1Threads_1_1scalable__allocator.html",tooltip="Scalable allocator to be used in multithreaded code chunks which allocate a lot of dynamic memory..."];
  Node5 [label="fast_pool_allocator",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node5 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="pool_allocator",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node6 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="scalable_allocator",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled"];
  Node7 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
}
