<map id="类继承关系图" name="类继承关系图">
<area shape="rect" id="node2" href="$classlibMesh_1_1TrilinosPreconditioner.html" title="这个类提供了一个接口，用于使用Trilinos提供的预条件器套件。 所有重写的虚拟函数在preconditioner.h中有文档说明。 " alt="" coords="500,512,759,539"/>
<area shape="rect" id="node4" href="$classlibMesh_1_1NumericVector.html" title="提供了不同线性代数库的向量存储方案的统一接口。 " alt="" coords="256,142,433,183"/>
<area shape="rect" id="node5" href="$classlibMesh_1_1Preconditioner.html" title="该类提供了一个统一的接口，用于预处理器。此基类可继承，以包装来自不同软件包（如 PETSc 或 Trilinos）的预处理器。 " alt="" coords="238,512,451,539"/>
<area shape="rect" id="node7" href="$classlibMesh_1_1ShellMatrix.html" title="通用的Shell矩阵，即一个仅定义其对向量的作用的矩阵。此类包含必须在派生类中重写的纯虚拟成员。 " alt="" coords="248,639,441,665"/>
<area shape="rect" id="node12" href="$classlibMesh_1_1SparseMatrix.html" title="这是一个通用的稀疏矩阵类。该类包含了必须在派生类中覆盖的纯虚拟成员。 使用一个公共的基类允许从不同的求解器包中以不同的格式统一访问稀疏矩阵。 " alt="" coords="242,208,447,235"/>
<area shape="rect" id="node19" href="$classlibMesh_1_1NumericVector.html" title="libMesh::NumericVector\&lt; T \&gt;" alt="" coords="237,360,452,387"/>
<area shape="rect" id="node6" href="$classlibMesh_1_1EigenPreconditioner.html" title="EigenPreconditioner 类提供了对 Eigen 库中预处理器集合的接口。 " alt="" coords="505,563,754,589"/>
<area shape="rect" id="node8" href="$classlibMesh_1_1PetscShellMatrix.html" title="这个类允许使用 PETSc shell 矩阵。 所有覆盖的虚拟函数都在 shell_matrix.h 中有文档说明。 " alt="" coords="515,715,743,741"/>
<area shape="rect" id="node9" href="$classlibMesh_1_1SparseShellMatrix.html" title="允许将任何SparseMatrix对象用作壳矩阵的类。 " alt="" coords="511,765,748,792"/>
<area shape="rect" id="node10" href="$classlibMesh_1_1SumShellMatrix.html" title="将任意数量的壳矩阵组合成一个单独的壳矩阵，通过将它们相加在一起的类。 " alt="" coords="518,613,741,640"/>
<area shape="rect" id="node11" href="$classlibMesh_1_1TensorShellMatrix.html" title="由两个向量的张量积构成的壳矩阵，即A = v*w^T。 " alt="" coords="512,664,747,691"/>
<area shape="rect" id="node13" href="$classlibMesh_1_1DiagonalMatrix.html" title="对角矩阵类，其底层存储是一个向量 " alt="" coords="520,157,739,184"/>
<area shape="rect" id="node15" href="$classlibMesh_1_1EigenSparseMatrix.html" title="EigenSparseMatrix 类包装了来自 Eigen 库的稀疏矩阵对象。 " alt="" coords="509,208,750,235"/>
<area shape="rect" id="node16" href="$classlibMesh_1_1EpetraMatrix.html" title="此类提供了对Epetra数据结构的并行、稀疏矩阵的友好接口。所有重写的虚拟函数在sparse_matrix.h中都有文档。 " alt="" coords="528,5,731,32"/>
<area shape="rect" id="node17" href="$classlibMesh_1_1LaspackMatrix.html" title="LaspackMatrix类封装了Laspack库中的QMatrix对象。 目前，Laspack仅支持实数数据类型，因此这个类是对 SparseMatrix&lt;T&gt; 的全特化，其中 T = Real。 所..." alt="" coords="522,56,737,83"/>
<area shape="rect" id="node18" href="$classlibMesh_1_1PetscMatrix.html" title="这个类提供了一个方便的接口，用于操作并行稀疏矩阵的 PETSc C 库数据结构。 所有覆盖的虚拟函数都在 sparse_matrix.h 中有详细的文档说明。 " alt="" coords="531,107,727,133"/>
<area shape="rect" id="node14" href="$classlibMesh_1_1LumpedMassMatrix.html" title="模板类用于构造集中质量矩阵。 可能还有用于计算与整体系统缩放相关的数量。每当在此类上调用 add 方法时，我们都会将提供的值的绝对值相加到行索引 i 中。 " alt="" coords="807,157,1053,184"/>
<area shape="rect" id="node20" href="$classlibMesh_1_1DistributedVector.html" title="该类提供了一个简单的并行分布式向量数据类型， 专门用于 libmesh。提供了一些集体通信功能。 " alt="" coords="513,309,745,336"/>
<area shape="rect" id="node21" href="$classlibMesh_1_1EigenSparseVector.html" title="This class provides a nice interface to the Eigen C++&#45;based data structures for serial vectors..." alt="" coords="509,360,749,387"/>
<area shape="rect" id="node22" href="$classlibMesh_1_1EpetraVector.html" title="此类提供了对Trilinos Epetra_Vector对象的友好接口。所有重写的虚拟函数在numeric_vector.h中都有文档。 " alt="" coords="528,411,731,437"/>
<area shape="rect" id="node23" href="$classlibMesh_1_1LaspackVector.html" title="这个类为基于laspackc的串行向量数据结构提供了一个很好的接口。 所有被覆盖的虚函数都记录在numeric_vector.h中。 " alt="" coords="523,461,736,488"/>
<area shape="rect" id="node24" href="$classlibMesh_1_1PetscVector.html" title="该类提供了一个良好的接口，用于访问 PETSc 的 Vec 对象。所有重写的虚拟函数都在 numeric_vector.h 中有文档说明。 " alt="" coords="532,259,727,285"/>
</map>
